{"version":3,"sources":["components/Feedback/Section.js","components/Feedback/Statistics.js","components/Feedback/FeedbackOptions .js","components/Feedback/Notification.js","components/App.js","index.js"],"names":["Section","_ref","title","children","react_default","a","createElement","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","Fragment","type","value","onClick","Notification","message","App","state","handleChange","e","_this","setState","Object","defineProperty","props","step","countTotalFeedback","_this$state","countPositiveFeedbackPercentage","Math","round","this","Feedback_Section","FeedbackOptions_","Feedback_Statistics","Feedback_Notification","Component","defaultProps","ReactDOM","render","App_App","document","querySelector"],"mappings":"8KAceA,EAXC,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,SAAV,OACdC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,UAAKJ,GACJC,ICsBUI,EAzBI,SAAAN,GAAA,IACjBO,EADiBP,EACjBO,KACAC,EAFiBR,EAEjBQ,QACAC,EAHiBT,EAGjBS,IACAC,EAJiBV,EAIjBU,MACAC,EALiBX,EAKjBW,mBALiB,OAOjBR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kBAAUE,GACVJ,EAAAC,EAAAC,cAAA,qBAAaG,GACbL,EAAAC,EAAAC,cAAA,iBAASI,GACTN,EAAAC,EAAAC,cAAA,mBAAWK,KACXP,EAAAC,EAAAC,cAAA,+BAAuBM,IAAvB,OCkBWC,EA9BS,SAAAZ,GAAkC,IAA/Ba,EAA+Bb,EAA/Ba,QAASC,EAAsBd,EAAtBc,gBAC1BP,EAAuBM,EAAvBN,KAAMC,EAAiBK,EAAjBL,QAASC,EAAQI,EAARJ,IACvB,OACEN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAW,SAAA,KACEZ,EAAAC,EAAAC,cAAA,UACEW,KAAK,SACLC,MAAOV,EACPW,QAAS,kBAAMJ,EAAgB,UAHjC,QAOAX,EAAAC,EAAAC,cAAA,UACEW,KAAK,SACLC,MAAOT,EACPU,QAAS,kBAAMJ,EAAgB,aAHjC,WAOAX,EAAAC,EAAAC,cAAA,UAAQW,KAAK,SAASC,MAAOR,EAAKS,QAAS,kBAAMJ,EAAgB,SAAjE,SCVSK,EARM,SAAAnB,GAAA,IAAEoB,EAAFpB,EAAEoB,QAAF,OACrBjB,EAAAC,EAAAC,cAAA,SAAIe,ICEiBC,6MAKnBC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,KAGPc,aAAe,SAAAC,GACbC,EAAKC,SAAS,SAAAJ,GAAK,OAAAK,OAAAC,EAAA,EAAAD,CAAA,GAChBH,EAAIF,EAAME,GAAKC,EAAKI,MAAMC,WAI/BC,mBAAqB,WAAM,IAAAC,EACMP,EAAKH,MAEpC,OAHyBU,EACjBzB,KADiByB,EACXxB,QADWwB,EACFvB,OAKzBwB,gCAAkC,WAChC,OAAOC,KAAKC,MAAOV,EAAKH,MAAMf,KAAOkB,EAAKM,qBAAwB,8EAG3D,IACCxB,EAAS6B,KAAKd,MAAdf,KACAC,EAAY4B,KAAKd,MAAjBd,QACAC,EAAQ2B,KAAKd,MAAbb,IAER,OACEN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAW,SAAA,KACEZ,EAAAC,EAAAC,cAACgC,EAAD,CAASpC,MAAM,yBACbE,EAAAC,EAAAC,cAACiC,EAAD,CACEzB,QAASuB,KAAKd,MACdR,gBAAiBsB,KAAKb,gBAG1BpB,EAAAC,EAAAC,cAACgC,EAAD,CAASpC,MAAM,cACZmC,KAAKL,qBAAuB,EAC3B5B,EAAAC,EAAAC,cAACkC,EAAD,CACEhC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO0B,KAAKL,mBACZpB,mBAAoByB,KAAKH,kCAG3B9B,EAAAC,EAAAC,cAACmC,EAAD,CAAcpB,QAAQ,+BAlDDqB,aAAZpB,EACZqB,aAAe,CACpBZ,KAAM,GCJVa,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,cAAc","file":"static/js/main.26875213.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) => (\r\n  <div>\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n    <p>Total: {total()}</p>\r\n    <p>Positive Feedback: {positivePercentage()}%</p>\r\n  </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const { good, neutral, bad } = options;\r\n  return (\r\n    <>\r\n      <button\r\n        type=\"button\"\r\n        value={good}\r\n        onClick={() => onLeaveFeedback('good')}\r\n      >\r\n        Good\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        value={neutral}\r\n        onClick={() => onLeaveFeedback('neutral')}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" value={bad} onClick={() => onLeaveFeedback('bad')}>\r\n        Bad\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.objectOf(PropTypes.number).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({message}) => (\r\n<p>{message}</p>\r\n)\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Section from './Feedback/Section';\nimport Statistics from './Feedback/Statistics';\nimport FeedbackOptions from './Feedback/FeedbackOptions ';\nimport Notification from './Feedback/Notification';\n\nexport default class App extends Component {\n  static defaultProps = {\n    step: 1,\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleChange = e => {\n    this.setState(state => ({\n      [e]: state[e] + this.props.step,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good } = this.state;\n    const { neutral } = this.state;\n    const { bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleChange}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback}\n              positivePercentage={this.countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}